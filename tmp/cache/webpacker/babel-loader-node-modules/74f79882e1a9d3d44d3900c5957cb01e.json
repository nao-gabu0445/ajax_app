{"ast":null,"code":"function check() {\n  // 表示されているすべてのメモを取得している\n  var posts = document.querySelectorAll(\".post\");\n  posts.forEach(function (post) {\n    if (post.getAttribute(\"data-load\") != null) {\n      return null;\n    }\n\n    post.setAttribute(\"data-load\", \"true\"); // メモをクリックした場合に実行する処理を定義している\n\n    post.addEventListener(\"click\", function () {\n      // どのメモをクリックしたのか、カスタムデータを利用して取得している\n      var postId = post.getAttribute(\"data-id\"); // Ajaxに必要なオブジェクトを生成している\n\n      var XHR = new XMLHttpRequest(); // openでリクエストを初期化する\n\n      XHR.open(\"GET\", \"/posts/\".concat(postId), true); // レスポンスのタイプを指定する\n\n      XHR.responseType = \"json\"; // sendでリクエストを送信する\n\n      XHR.send(); // レスポンスを受け取った時の処理を記述する\n\n      XHR.onload = function () {\n        if (XHR.status != 200) {\n          // レスポンスの HTTP ステータスを解析し、該当するエラーメッセージをアラートで表示するようにしている\n          alert(\"Error \".concat(XHR.status, \": \").concat(XHR.statusText)); // 処理を終了している\n\n          return null;\n        } // レスポンスされたデータを変数itemに代入している\n\n\n        var item = XHR.response.post;\n\n        if (item.checked === true) {\n          // 既読状態であれば、灰色に変わるcssを適用するためのカスタムデータを追加している\n          post.setAttribute(\"data-check\", \"true\");\n        } else if (item.checked === false) {\n          // 未読状態であれば、カスタムデータを削除している\n          post.removeAttribute(\"data-check\");\n        }\n      };\n    });\n  });\n}\n\nsetInterval(check, 1000);","map":{"version":3,"sources":["/Users/ogawaranaoto/Desktop/ajax_app/app/javascript/checked.js"],"names":["check","posts","document","querySelectorAll","forEach","post","getAttribute","setAttribute","addEventListener","postId","XHR","XMLHttpRequest","open","responseType","send","onload","status","alert","statusText","item","response","checked","removeAttribute","setInterval"],"mappings":"AAAA,SAASA,KAAT,GAAiB;AACf;AACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAd;AACAF,EAAAA,KAAK,CAACG,OAAN,CAAc,UAAUC,IAAV,EAAgB;AAC3B,QAAIA,IAAI,CAACC,YAAL,CAAkB,WAAlB,KAAkC,IAAtC,EAA4C;AAC3C,aAAO,IAAP;AACD;;AACDD,IAAAA,IAAI,CAACE,YAAL,CAAkB,WAAlB,EAA+B,MAA/B,EAJ4B,CAK5B;;AACAF,IAAAA,IAAI,CAACG,gBAAL,CAAsB,OAAtB,EAA+B,YAAM;AACnC;AACA,UAAMC,MAAM,GAAGJ,IAAI,CAACC,YAAL,CAAkB,SAAlB,CAAf,CAFmC,CAGnC;;AACA,UAAMI,GAAG,GAAG,IAAIC,cAAJ,EAAZ,CAJmC,CAKnC;;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAAS,KAAT,mBAA0BH,MAA1B,GAAoC,IAApC,EANmC,CAOnC;;AACAC,MAAAA,GAAG,CAACG,YAAJ,GAAmB,MAAnB,CARmC,CASnC;;AACAH,MAAAA,GAAG,CAACI,IAAJ,GAVmC,CAWnC;;AACAJ,MAAAA,GAAG,CAACK,MAAJ,GAAa,YAAM;AACjB,YAAIL,GAAG,CAACM,MAAJ,IAAc,GAAlB,EAAuB;AACrB;AACAC,UAAAA,KAAK,iBAAUP,GAAG,CAACM,MAAd,eAAyBN,GAAG,CAACQ,UAA7B,EAAL,CAFqB,CAGrB;;AACA,iBAAO,IAAP;AACD,SANgB,CAOjB;;;AACA,YAAMC,IAAI,GAAGT,GAAG,CAACU,QAAJ,CAAaf,IAA1B;;AACA,YAAIc,IAAI,CAACE,OAAL,KAAiB,IAArB,EAA2B;AACzB;AACAhB,UAAAA,IAAI,CAACE,YAAL,CAAkB,YAAlB,EAAgC,MAAhC;AACD,SAHD,MAGO,IAAIY,IAAI,CAACE,OAAL,KAAiB,KAArB,EAA4B;AACjC;AACAhB,UAAAA,IAAI,CAACiB,eAAL,CAAqB,YAArB;AACD;AACF,OAhBD;AAiBD,KA7BD;AA8BD,GApCD;AAqCD;;AACDC,WAAW,CAACvB,KAAD,EAAQ,IAAR,CAAX","sourcesContent":["function check() {\n  // 表示されているすべてのメモを取得している\n  const posts = document.querySelectorAll(\".post\");\n  posts.forEach(function (post) {\n     if (post.getAttribute(\"data-load\") != null) {\n      return null;\n    }\n    post.setAttribute(\"data-load\", \"true\");\n    // メモをクリックした場合に実行する処理を定義している\n    post.addEventListener(\"click\", () => {\n      // どのメモをクリックしたのか、カスタムデータを利用して取得している\n      const postId = post.getAttribute(\"data-id\");\n      // Ajaxに必要なオブジェクトを生成している\n      const XHR = new XMLHttpRequest();\n      // openでリクエストを初期化する\n      XHR.open(\"GET\", `/posts/${postId}`, true);\n      // レスポンスのタイプを指定する\n      XHR.responseType = \"json\";\n      // sendでリクエストを送信する\n      XHR.send();\n      // レスポンスを受け取った時の処理を記述する\n      XHR.onload = () => {\n        if (XHR.status != 200) {\n          // レスポンスの HTTP ステータスを解析し、該当するエラーメッセージをアラートで表示するようにしている\n          alert(`Error ${XHR.status}: ${XHR.statusText}`);\n          // 処理を終了している\n          return null;          \n        }\n        // レスポンスされたデータを変数itemに代入している\n        const item = XHR.response.post;\n        if (item.checked === true) {\n          // 既読状態であれば、灰色に変わるcssを適用するためのカスタムデータを追加している\n          post.setAttribute(\"data-check\", \"true\");\n        } else if (item.checked === false) {\n          // 未読状態であれば、カスタムデータを削除している\n          post.removeAttribute(\"data-check\");\n        }\n      };\n    });\n  });\n}\nsetInterval(check, 1000);"]},"metadata":{},"sourceType":"module"}